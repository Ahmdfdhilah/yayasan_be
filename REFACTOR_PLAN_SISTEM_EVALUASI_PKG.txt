================================================================================
                    RENCANA REFACTOR SISTEM EVALUASI PKG
                        (Simplified Evaluation System)
================================================================================

üìã OVERVIEW PERUBAHAN
===================
Konsep Baru:
‚Ä¢ Simplified Evaluation System: Hapus kompleksitas weight dan max_score per aspek
‚Ä¢ Fixed Scoring: Setiap aspek menggunakan sistem A,B,C,D (4,3,2,1) yang mutlak
‚Ä¢ Period Management: Tambah tabel periods untuk manajemen yang lebih baik
‚Ä¢ Bulk Assignment: Teacher otomatis assigned ke semua aspek dalam periode tertentu
‚Ä¢ Auto Calculation: Perhitungan otomatis tanpa tabel evaluation_result terpisah
‚Ä¢ Universal Periods: Table periods digunakan untuk evaluasi DAN RPP submissions

================================================================================
üóÇÔ∏è STRUKTUR TABEL BARU
================================================================================

1. periods (BARU - Universal untuk semua kebutuhan)
---------------------------------------------------
- id: Primary Key
- academic_year: VARCHAR(20) 
- semester: VARCHAR(20)
- start_date: DATE
- end_date: DATE
- is_active: BOOLEAN
- description: TEXT
- created_at, updated_at, created_by, updated_by

Constraint:
- UNIQUE(academic_year, semester)

2. evaluation_aspects (DISEDERHANAKAN)
--------------------------------------
- id: Primary Key
- aspect_name: VARCHAR(255)
- category: VARCHAR(100)
- description: TEXT
- is_active: BOOLEAN
- created_at, updated_at, created_by, updated_by

HAPUS:
- weight (tidak perlu, semua aspek sama penting)
- min_score, max_score (fixed A,B,C,D = 4,3,2,1)

3. teacher_evaluations (REFACTOR TOTAL)
---------------------------------------
- id: Primary Key
- teacher_id: FK users.id
- evaluator_id: FK users.id
- aspect_id: FK evaluation_aspects.id
- period_id: FK periods.id
- grade: ENUM('A','B','C','D') -- A=4, B=3, C=2, D=1
- score: INTEGER GENERATED ALWAYS AS (
    CASE grade 
      WHEN 'A' THEN 4 
      WHEN 'B' THEN 3 
      WHEN 'C' THEN 2 
      WHEN 'D' THEN 1 
    END
  ) STORED
- notes: TEXT
- evaluation_date: TIMESTAMP
- created_at, updated_at, created_by, updated_by

HAPUS:
- academic_year, semester (diganti period_id)

CONSTRAINT:
- UNIQUE(teacher_id, aspect_id, period_id)
- CHECK(grade IN ('A','B','C','D'))

4. HAPUS TABEL evaluation_results
----------------------------------
Tabel ini dihapus karena data bisa dihitung real-time dari teacher_evaluations.

================================================================================
üîÑ BUSINESS LOGIC BARU
================================================================================

1. Evaluation Assignment Flow
-----------------------------
1. Admin/Kepala Sekolah ‚Üí Create/Activate Period (evaluation type)
2. Admin/Kepala Sekolah ‚Üí Assign Teachers to Period 
   ‚Üí System auto-creates records untuk semua active aspects //buat endpoint assign all untuk otomasi dan assign ke semua users dengan role  teacher(jika   sudah ada dalam periode terkait maka skip)
3. Kepala Sekolah ‚Üí Fill evaluation grades (A,B,C,D) untuk setiap teacher-aspect

2. Scoring System (Fixed & Simple)
----------------------------------
Grade Mapping (Mutlak):
- A = 4 points (Excellent)
- B = 3 points (Good) 
- C = 2 points (Satisfactory)
- D = 1 point (Needs Improvement)

Calculation Formula:
- Total Score = SUM(all aspect scores)
- Max Possible Score = COUNT(active_aspects) * 4
- Performance Value = Total Score * 1.25
- Score Percentage = (Total Score / Max Possible Score) * 100
- Performance Percentage = Score Percentage * 1.25

3. Grade Categories (Updated)
-----------------------------
Based on Performance Percentage:
- A: ‚â• 90%
- B: 80-89%
- C: 70-79%  
- D: < 70%

================================================================================
üìÅ FILES YANG PERLU DIUBAH
================================================================================

HAPUS SEPENUHNYA:
üóëÔ∏è src/models/evaluation_result.py
üóëÔ∏è src/schemas/evaluation_result.py  
üóëÔ∏è src/repositories/evaluation_result.py
üóëÔ∏è src/services/evaluation_result.py
üóëÔ∏è src/api/endpoints/evaluation_results.py

REFACTOR TOTAL:
‚úÖ src/models/evaluation_aspect.py ‚Üí Hapus weight, min_score, max_score
‚úÖ src/models/teacher_evaluation.py ‚Üí Ganti score ke grade ENUM, tambah period_id
‚úÖ src/schemas/evaluation_aspect.py ‚Üí Sesuaikan dengan model baru
‚úÖ src/schemas/teacher_evaluation.py ‚Üí Ubah ke grade-based system  
‚úÖ src/repositories/evaluation_aspect.py ‚Üí Update sesuai model
‚úÖ src/repositories/teacher_evaluation.py ‚Üí Bulk assignment, grade-based queries
‚úÖ src/services/evaluation_aspect.py ‚Üí Simplified logic
‚úÖ src/services/teacher_evaluation.py ‚Üí Bulk assignment, auto-calculation
‚úÖ src/api/endpoints/evaluation_aspects.py ‚Üí Simplified CRUD
‚úÖ src/api/endpoints/teacher_evaluations.py ‚Üí Bulk assignment endpoints

BUAT BARU:
üÜï src/models/period.py ‚Üí Model untuk periode universal
üÜï src/schemas/period.py ‚Üí Schemas untuk periode
üÜï src/repositories/period.py ‚Üí CRUD periode
üÜï src/services/period.py ‚Üí Period management
üÜï src/api/endpoints/periods.py ‚Üí Period management endpoints

UPDATE:
üîÑ src/models/enums.py ‚Üí Tambah EvaluationGrade ENUM, PeriodType ENUM
üîÑ src/models/rpp_submission.py ‚Üí Update foreign key ke periods table

================================================================================
üìä DATABASE MIGRATION SCRIPT
================================================================================
TAK PERLU  KARNA MASIH DEVELOPMENT DAN FAST API BISA OTOMATIS LIHAT DARI MODELS

================================================================================
üéØ NEW ENDPOINTS STRUCTURE
================================================================================

Periods Management:
------------------
POST   /periods/                     ‚Üí Create period
GET    /periods/                     ‚Üí List periods with filters
GET    /periods/{id}                 ‚Üí Get period details
PUT    /periods/{id}                 ‚Üí Update period
DELETE /periods/{id}                 ‚Üí Delete period (if no data)
PATCH  /periods/{id}/activate        ‚Üí Activate period
PATCH  /periods/{id}/deactivate      ‚Üí Deactivate period
GET    /periods/active               ‚Üí Get active periods

Teacher Evaluations (Refactored):
---------------------------------
POST   /teacher-evaluations/assign-teachers-to-period    ‚Üí Bulk assign teachers to period
GET    /teacher-evaluations/period/{period_id}           ‚Üí Get evaluations by period
GET    /teacher-evaluations/teacher/{teacher_id}/period/{period_id} ‚Üí Teacher evaluations in period
PUT    /teacher-evaluations/{id}/grade                   ‚Üí Update single evaluation grade
PATCH  /teacher-evaluations/bulk-grade                   ‚Üí Bulk update grades
POST   /teacher-evaluations/complete-teacher-evaluation  ‚Üí Complete all aspects for teacher

Evaluation Aspects (Simplified):
--------------------------------
POST   /evaluation-aspects/          ‚Üí Create aspect (no weight/scores)
GET    /evaluation-aspects/          ‚Üí List aspects
GET    /evaluation-aspects/{id}      ‚Üí Get aspect
PUT    /evaluation-aspects/{id}      ‚Üí Update aspect
DELETE /evaluation-aspects/{id}      ‚Üí Delete aspect
PATCH  /evaluation-aspects/{id}/activate   ‚Üí Activate aspect