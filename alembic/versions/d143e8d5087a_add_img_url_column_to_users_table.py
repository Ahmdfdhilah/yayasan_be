"""Add img_url column to users table

Revision ID: d143e8d5087a
Revises: 385658b8df96
Create Date: 2025-08-13 23:25:15.957327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'd143e8d5087a'
down_revision: Union[str, None] = '385658b8df96'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if indexes exist before dropping them
    connection = op.get_bind()
    
    # Check if ix_statistics_display_order exists
    result = connection.execute(sa.text("""
        SELECT 1 FROM pg_indexes 
        WHERE tablename = 'statistics' AND indexname = 'ix_statistics_display_order'
    """))
    if result.fetchone():
        op.drop_index('ix_statistics_display_order', table_name='statistics')
    
    # Check if ix_statistics_title exists
    result = connection.execute(sa.text("""
        SELECT 1 FROM pg_indexes 
        WHERE tablename = 'statistics' AND indexname = 'ix_statistics_title'
    """))
    if result.fetchone():
        op.drop_index('ix_statistics_title', table_name='statistics')
    
    # Check if statistics table exists before dropping
    result = connection.execute(sa.text("""
        SELECT 1 FROM pg_tables WHERE tablename = 'statistics'
    """))
    if result.fetchone():
        op.drop_table('statistics')
    op.add_column('users', sa.Column('img_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if column exists before dropping
    connection = op.get_bind()
    result = connection.execute(sa.text("""
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'users' AND column_name = 'img_url'
    """))
    if result.fetchone():
        op.drop_column('users', 'img_url')
    op.create_table('statistics',
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('stats', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('img_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='statistics_pkey')
    )
    op.create_index('ix_statistics_title', 'statistics', ['title'], unique=False)
    op.create_index('ix_statistics_display_order', 'statistics', ['display_order'], unique=False)
    # ### end Alembic commands ###
